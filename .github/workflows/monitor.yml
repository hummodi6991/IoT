name: Monitor

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  contents: write   # allow the action to push state

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run monitor
        env:
          # Non-secret config (from Repository Variables)
          PROVIDER: ${{ vars.PROVIDER }}                    # boomnow_http
          ALERT_COOLDOWN_MINUTES: ${{ vars.ALERT_COOLDOWN_MINUTES }}
          OFFLINE_GRACE_MINUTES: ${{ vars.OFFLINE_GRACE_MINUTES }}
          BATTERY_LOW_THRESHOLD: ${{ vars.BATTERY_LOW_THRESHOLD }}
          BOOMNOW_BASE_URL: ${{ vars.BOOMNOW_BASE_URL }}
          BOOMNOW_DEVICES_ENDPOINT: ${{ vars.BOOMNOW_DEVICES_ENDPOINT }}
          BOOMNOW_LOGIN_URL: ${{ vars.BOOMNOW_LOGIN_URL }}
          BOOMNOW_LOGIN_KIND: ${{ vars.BOOMNOW_LOGIN_KIND }}
          # Provider discovery / pagination / scoping
          BOOMNOW_DEVICES_JSON_PATH: ${{ vars.BOOMNOW_DEVICES_JSON_PATH }}   # e.g. list.items
          BOOMNOW_DEVICES_QUERY: ${{ vars.BOOMNOW_DEVICES_QUERY }}           # e.g. perPage=100&page=1
          BOOMNOW_EXTRA_HEADERS: ${{ vars.BOOMNOW_EXTRA_HEADERS }}           # optional org/tenant header
          BOOMNOW_EXACT_DEVICES_URL: ${{ vars.BOOMNOW_EXACT_DEVICES_URL }}   # optional exact URL override
          DEBUG_PROVIDER: ${{ vars.DEBUG_PROVIDER }}                         # set 1 for one run
          STRICT_EMAIL: ${{ vars.STRICT_EMAIL }}                             # optional
          # ───────── New knobs (Repository Variables) ─────────
          SUPPRESS_FIRST_RUN: ${{ vars.SUPPRESS_FIRST_RUN }}                  # '1' to suppress alerts on the very first run
          ALERT_BATCH_LIMIT: ${{ vars.ALERT_BATCH_LIMIT }}                    # cap number of alerts per run (e.g., 10)
          BOOMNOW_ONLINE_FIELD: ${{ vars.BOOMNOW_ONLINE_FIELD }}              # optional: override online field name
          BOOMNOW_NAME_FIELD: ${{ vars.BOOMNOW_NAME_FIELD }}                  # optional: override name field name
          BOOMNOW_COLOR_ONLY: ${{ vars.BOOMNOW_COLOR_ONLY }}                  # '1' to force color-only logic
          BOOMNOW_COLOR_FIELD: ${{ vars.BOOMNOW_COLOR_FIELD }}                # optional dot-path to the color (e.g. status.color)

          # Secrets (credentials)
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          TO_EMAILS: ${{ secrets.TO_EMAILS }}
          BOOMNOW_API_KEY: ${{ secrets.BOOMNOW_API_KEY }}          # leave empty if not used
          BOOMNOW_EMAIL: ${{ secrets.BOOMNOW_EMAIL }}
          BOOMNOW_PASSWORD: ${{ secrets.BOOMNOW_PASSWORD }}
        run: |
          python - <<'PY'
          from app.main import main
          main()
          PY

      - name: Commit state if changed
        if: always()
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain state/state.json || true)" ]; then
            git add state/state.json
            git commit -m "chore(state): update $(date -u +'%Y-%m-%d %H:%M:%S')"
            git push
          fi
